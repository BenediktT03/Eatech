/**
 * EATECH - Voice Order Interface CSS Module
 * Version: 4.1.0
 * Description: Advanced styling for voice-controlled ordering interface
 * Author: EATECH Development Team
 * Created: 2025-01-08
 * 
 * File Path: /apps/web/src/components/customer/VoiceOrderInterface.module.css
 * 
 * Features:
 * - Swiss design system compliance
 * - Multi-state voice interface styling
 * - Advanced animations and micro-interactions
 * - Accessibility optimizations
 * - Responsive design for all devices
 * - Dark/light theme support
 * - Voice waveform visualizations
 * - Real-time feedback animations
 * - Performance optimized CSS
 * - Swiss typography and spacing
 */

/* ===== CSS CUSTOM PROPERTIES ===== */
.voiceOrderInterface {
  /* Swiss Color Palette */
  --swiss-red: #dc143c;
  --swiss-white: #ffffff;
  --swiss-dark: #1a1a1a;
  --swiss-gray-50: #f8fafc;
  --swiss-gray-100: #f1f5f9;
  --swiss-gray-200: #e2e8f0;
  --swiss-gray-300: #cbd5e1;
  --swiss-gray-400: #94a3b8;
  --swiss-gray-500: #64748b;
  --swiss-gray-600: #475569;
  --swiss-gray-700: #334155;
  --swiss-gray-800: #1e293b;
  --swiss-gray-900: #0f172a;

  /* Voice Interface Colors */
  --voice-primary: #3b82f6;
  --voice-primary-dark: #2563eb;
  --voice-secondary: #06b6d4;
  --voice-success: #10b981;
  --voice-warning: #f59e0b;
  --voice-error: #ef4444;
  --voice-info: #8b5cf6;

  /* Voice States */
  --voice-idle: var(--swiss-gray-400);
  --voice-listening: var(--voice-primary);
  --voice-processing: var(--voice-secondary);
  --voice-speaking: var(--voice-success);
  --voice-error-state: var(--voice-error);

  /* Gradients */
  --voice-gradient: linear-gradient(135deg, var(--voice-primary) 0%, var(--voice-secondary) 100%);
  --success-gradient: linear-gradient(135deg, #10b981 0%, #34d399 100%);
  --error-gradient: linear-gradient(135deg, #ef4444 0%, #f87171 100%);
  --warning-gradient: linear-gradient(135deg, #f59e0b 0%, #fbbf24 100%);

  /* Swiss Typography */
  --font-family-primary: 'Inter', 'Helvetica Neue', 'Segoe UI', system-ui, sans-serif;
  --font-family-mono: 'SF Mono', 'Monaco', 'Cascadia Code', monospace;

  /* Spacing (Swiss 8px grid system) */
  --spacing-xs: 0.25rem;   /* 4px */
  --spacing-sm: 0.5rem;    /* 8px */
  --spacing-md: 1rem;      /* 16px */
  --spacing-lg: 1.5rem;    /* 24px */
  --spacing-xl: 2rem;      /* 32px */
  --spacing-2xl: 3rem;     /* 48px */
  --spacing-3xl: 4rem;     /* 64px */

  /* Shadows */
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  --shadow-voice: 0 0 30px rgba(59, 130, 246, 0.3);

  /* Borders */
  --border-radius-sm: 0.375rem;
  --border-radius-md: 0.5rem;
  --border-radius-lg: 0.75rem;
  --border-radius-xl: 1rem;
  --border-radius-2xl: 1.5rem;
  --border-radius-full: 9999px;

  /* Transitions */
  --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);
  --transition-normal: 300ms cubic-bezier(0.4, 0, 0.2, 1);
  --transition-slow: 500ms cubic-bezier(0.4, 0, 0.2, 1);
  --transition-bounce: 500ms cubic-bezier(0.68, -0.55, 0.265, 1.55);

  /* Z-index layers */
  --z-dropdown: 1000;
  --z-modal: 1010;
  --z-popover: 1020;
  --z-tooltip: 1030;
  --z-notification: 1040;
}

/* ===== MAIN CONTAINER ===== */
.voiceOrderInterface {
  position: relative;
  width: 100%;
  max-width: 480px;
  margin: 0 auto;
  padding: var(--spacing-lg);
  background: var(--swiss-white);
  border-radius: var(--border-radius-2xl);
  box-shadow: var(--shadow-xl);
  font-family: var(--font-family-primary);
  transition: all var(--transition-normal);
  overflow: hidden;
}

.voiceOrderInterface::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: var(--voice-gradient);
  z-index: 1;
}

/* Dark theme support */
.voiceOrderInterface.dark {
  background: var(--swiss-gray-900);
  color: var(--swiss-white);
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.3), 0 10px 10px -5px rgba(0, 0, 0, 0.2);
}

/* ===== HEADER SECTION ===== */
.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: var(--spacing-lg);
  padding-bottom: var(--spacing-md);
  border-bottom: 1px solid var(--swiss-gray-200);
}

.dark .header {
  border-bottom-color: var(--swiss-gray-700);
}

.title {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--swiss-gray-900);
  margin: 0;
}

.dark .title {
  color: var(--swiss-white);
}

.titleIcon {
  width: 24px;
  height: 24px;
  color: var(--voice-primary);
}

.statusBadge {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--border-radius-full);
  font-size: 0.75rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  transition: all var(--transition-fast);
}

.statusBadge.idle {
  background: var(--swiss-gray-100);
  color: var(--swiss-gray-600);
}

.statusBadge.listening {
  background: rgba(59, 130, 246, 0.1);
  color: var(--voice-primary);
  animation: pulse 2s infinite;
}

.statusBadge.processing {
  background: rgba(6, 182, 212, 0.1);
  color: var(--voice-secondary);
  animation: processing 1.5s linear infinite;
}

.statusBadge.speaking {
  background: rgba(16, 185, 129, 0.1);
  color: var(--voice-success);
  animation: speaking 0.8s ease-in-out infinite;
}

.statusBadge.error {
  background: rgba(239, 68, 68, 0.1);
  color: var(--voice-error);
  animation: shake 0.5s ease-in-out;
}

.statusIcon {
  width: 12px;
  height: 12px;
}

/* ===== VOICE CONTROL SECTION ===== */
.voiceControl {
  text-align: center;
  margin-bottom: var(--spacing-xl);
}

.voiceButton {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 120px;
  height: 120px;
  border: none;
  border-radius: var(--border-radius-full);
  background: var(--voice-gradient);
  color: var(--swiss-white);
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition-normal);
  box-shadow: var(--shadow-lg);
  outline: none;
  overflow: hidden;
}

.voiceButton:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-xl), var(--shadow-voice);
}

.voiceButton:active {
  transform: translateY(0);
}

.voiceButton:focus-visible {
  outline: 2px solid var(--voice-primary);
  outline-offset: 4px;
}

.voiceButton.listening {
  animation: voicePulse 2s infinite;
  box-shadow: var(--shadow-xl), var(--shadow-voice);
}

.voiceButton.processing {
  animation: voiceProcessing 1.5s linear infinite;
}

.voiceButton.speaking {
  animation: voiceSpeaking 0.8s ease-in-out infinite;
}

.voiceButton.disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.voiceButtonIcon {
  width: 48px;
  height: 48px;
  transition: all var(--transition-fast);
}

.voiceButton.listening .voiceButtonIcon {
  animation: iconPulse 2s infinite;
}

.voiceButtonText {
  position: absolute;
  bottom: -40px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--swiss-gray-600);
  white-space: nowrap;
}

.dark .voiceButtonText {
  color: var(--swiss-gray-300);
}

/* ===== WAVEFORM VISUALIZATION ===== */
.waveformContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 60px;
  margin: var(--spacing-lg) 0;
  opacity: 0;
  transition: opacity var(--transition-normal);
}

.waveformContainer.active {
  opacity: 1;
}

.waveform {
  display: flex;
  align-items: end;
  gap: 2px;
  height: 40px;
}

.waveBar {
  width: 3px;
  background: var(--voice-primary);
  border-radius: var(--border-radius-sm);
  transition: height var(--transition-fast);
  animation: waveAnimation 1.5s ease-in-out infinite;
}

.waveBar:nth-child(2) { animation-delay: 0.1s; }
.waveBar:nth-child(3) { animation-delay: 0.2s; }
.waveBar:nth-child(4) { animation-delay: 0.3s; }
.waveBar:nth-child(5) { animation-delay: 0.4s; }
.waveBar:nth-child(6) { animation-delay: 0.3s; }
.waveBar:nth-child(7) { animation-delay: 0.2s; }
.waveBar:nth-child(8) { animation-delay: 0.1s; }

/* ===== TRANSCRIPT SECTION ===== */
.transcriptSection {
  margin-bottom: var(--spacing-lg);
}

.transcriptLabel {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--swiss-gray-600);
  margin-bottom: var(--spacing-sm);
}

.dark .transcriptLabel {
  color: var(--swiss-gray-300);
}

.transcriptIcon {
  width: 16px;
  height: 16px;
}

.transcript {
  min-height: 60px;
  padding: var(--spacing-md);
  background: var(--swiss-gray-50);
  border: 1px solid var(--swiss-gray-200);
  border-radius: var(--border-radius-lg);
  font-size: 1rem;
  line-height: 1.5;
  color: var(--swiss-gray-900);
  transition: all var(--transition-normal);
}

.dark .transcript {
  background: var(--swiss-gray-800);
  border-color: var(--swiss-gray-700);
  color: var(--swiss-white);
}

.transcript.empty {
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--swiss-gray-400);
  font-style: italic;
}

.transcript.updating {
  border-color: var(--voice-primary);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.confidenceScore {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: var(--spacing-sm);
  font-size: 0.75rem;
  color: var(--swiss-gray-500);
}

.confidenceBar {
  flex: 1;
  height: 4px;
  background: var(--swiss-gray-200);
  border-radius: var(--border-radius-full);
  margin: 0 var(--spacing-sm);
  overflow: hidden;
}

.dark .confidenceBar {
  background: var(--swiss-gray-700);
}

.confidenceFill {
  height: 100%;
  background: var(--voice-primary);
  border-radius: var(--border-radius-full);
  transition: width var(--transition-normal);
}

.confidenceFill.high {
  background: var(--voice-success);
}

.confidenceFill.medium {
  background: var(--voice-warning);
}

.confidenceFill.low {
  background: var(--voice-error);
}

/* ===== QUICK ACTIONS ===== */
.quickActions {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: var(--spacing-sm);
  margin-bottom: var(--spacing-lg);
}

.quickAction {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-md);
  background: var(--swiss-gray-50);
  border: 1px solid var(--swiss-gray-200);
  border-radius: var(--border-radius-lg);
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--swiss-gray-700);
  cursor: pointer;
  transition: all var(--transition-fast);
  text-align: center;
}

.dark .quickAction {
  background: var(--swiss-gray-800);
  border-color: var(--swiss-gray-700);
  color: var(--swiss-gray-300);
}

.quickAction:hover {
  background: var(--swiss-gray-100);
  border-color: var(--voice-primary);
  transform: translateY(-1px);
}

.dark .quickAction:hover {
  background: var(--swiss-gray-700);
}

.quickAction:active {
  transform: translateY(0);
}

.quickActionIcon {
  width: 24px;
  height: 24px;
  color: var(--voice-primary);
}

/* ===== LANGUAGE SELECTOR ===== */
.languageSelector {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  margin-bottom: var(--spacing-lg);
}

.languageLabel {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--swiss-gray-600);
}

.dark .languageLabel {
  color: var(--swiss-gray-300);
}

.languageDropdown {
  flex: 1;
  padding: var(--spacing-sm) var(--spacing-md);
  background: var(--swiss-white);
  border: 1px solid var(--swiss-gray-300);
  border-radius: var(--border-radius-md);
  font-size: 0.875rem;
  color: var(--swiss-gray-900);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.dark .languageDropdown {
  background: var(--swiss-gray-800);
  border-color: var(--swiss-gray-600);
  color: var(--swiss-white);
}

.languageDropdown:hover {
  border-color: var(--voice-primary);
}

.languageDropdown:focus {
  outline: none;
  border-color: var(--voice-primary);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

/* ===== ERROR STATES ===== */
.errorMessage {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-md);
  background: rgba(239, 68, 68, 0.1);
  border: 1px solid rgba(239, 68, 68, 0.2);
  border-radius: var(--border-radius-lg);
  color: var(--voice-error);
  font-size: 0.875rem;
  margin-bottom: var(--spacing-lg);
  animation: slideInDown var(--transition-normal);
}

.errorIcon {
  width: 20px;
  height: 20px;
  flex-shrink: 0;
}

/* ===== SUCCESS STATES ===== */
.successMessage {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-md);
  background: rgba(16, 185, 129, 0.1);
  border: 1px solid rgba(16, 185, 129, 0.2);
  border-radius: var(--border-radius-lg);
  color: var(--voice-success);
  font-size: 0.875rem;
  margin-bottom: var(--spacing-lg);
  animation: slideInDown var(--transition-normal);
}

.successIcon {
  width: 20px;
  height: 20px;
  flex-shrink: 0;
}

/* ===== SETTINGS PANEL ===== */
.settingsPanel {
  background: var(--swiss-gray-50);
  border: 1px solid var(--swiss-gray-200);
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-lg);
  margin-top: var(--spacing-lg);
}

.dark .settingsPanel {
  background: var(--swiss-gray-800);
  border-color: var(--swiss-gray-700);
}

.settingsTitle {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  font-size: 1rem;
  font-weight: 600;
  color: var(--swiss-gray-900);
  margin-bottom: var(--spacing-lg);
}

.dark .settingsTitle {
  color: var(--swiss-white);
}

.settingItem {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--spacing-md) 0;
  border-bottom: 1px solid var(--swiss-gray-200);
}

.dark .settingItem {
  border-bottom-color: var(--swiss-gray-700);
}

.settingItem:last-child {
  border-bottom: none;
}

.settingLabel {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--swiss-gray-700);
}

.dark .settingLabel {
  color: var(--swiss-gray-300);
}

.settingDescription {
  font-size: 0.75rem;
  color: var(--swiss-gray-500);
  margin-top: var(--spacing-xs);
}

.dark .settingDescription {
  color: var(--swiss-gray-400);
}

/* ===== TOGGLE SWITCH ===== */
.toggleSwitch {
  position: relative;
  width: 44px;
  height: 24px;
  background: var(--swiss-gray-300);
  border-radius: var(--border-radius-full);
  cursor: pointer;
  transition: background-color var(--transition-fast);
}

.toggleSwitch.active {
  background: var(--voice-primary);
}

.toggleHandle {
  position: absolute;
  top: 2px;
  left: 2px;
  width: 20px;
  height: 20px;
  background: var(--swiss-white);
  border-radius: var(--border-radius-full);
  transition: transform var(--transition-fast);
  box-shadow: var(--shadow-sm);
}

.toggleSwitch.active .toggleHandle {
  transform: translateX(20px);
}

/* ===== FOOTER ACTIONS ===== */
.footerActions {
  display: flex;
  gap: var(--spacing-sm);
  margin-top: var(--spacing-xl);
}

.actionButton {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-md) var(--spacing-lg);
  border: 1px solid var(--swiss-gray-300);
  border-radius: var(--border-radius-lg);
  background: var(--swiss-white);
  color: var(--swiss-gray-700);
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition-fast);
}

.dark .actionButton {
  background: var(--swiss-gray-800);
  border-color: var(--swiss-gray-600);
  color: var(--swiss-gray-300);
}

.actionButton:hover {
  background: var(--swiss-gray-50);
  border-color: var(--voice-primary);
}

.dark .actionButton:hover {
  background: var(--swiss-gray-700);
}

.actionButton.primary {
  background: var(--voice-primary);
  border-color: var(--voice-primary);
  color: var(--swiss-white);
}

.actionButton.primary:hover {
  background: var(--voice-primary-dark);
  border-color: var(--voice-primary-dark);
}

.actionButtonIcon {
  width: 16px;
  height: 16px;
}

/* ===== LOADING STATES ===== */
.loading {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-2xl);
  text-align: center;
}

.loadingSpinner {
  width: 40px;
  height: 40px;
  border: 3px solid var(--swiss-gray-200);
  border-top-color: var(--voice-primary);
  border-radius: var(--border-radius-full);
  animation: spin 1s linear infinite;
  margin-bottom: var(--spacing-md);
}

.dark .loadingSpinner {
  border-color: var(--swiss-gray-700);
  border-top-color: var(--voice-primary);
}

.loadingText {
  font-size: 0.875rem;
  color: var(--swiss-gray-500);
}

.dark .loadingText {
  color: var(--swiss-gray-400);
}

/* ===== RESPONSIVE DESIGN ===== */

/* Tablet styles */
@media (max-width: 768px) {
  .voiceOrderInterface {
    margin: var(--spacing-md);
    padding: var(--spacing-md);
    border-radius: var(--border-radius-xl);
  }

  .voiceButton {
    width: 100px;
    height: 100px;
  }

  .voiceButtonIcon {
    width: 40px;
    height: 40px;
  }

  .quickActions {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* Mobile styles */
@media (max-width: 480px) {
  .voiceOrderInterface {
    margin: var(--spacing-sm);
    padding: var(--spacing-sm);
    border-radius: var(--border-radius-lg);
  }

  .header {
    flex-direction: column;
    gap: var(--spacing-sm);
    text-align: center;
  }

  .voiceButton {
    width: 80px;
    height: 80px;
  }

  .voiceButtonIcon {
    width: 32px;
    height: 32px;
  }

  .voiceButtonText {
    bottom: -30px;
    font-size: 0.75rem;
  }

  .quickActions {
    grid-template-columns: 1fr;
  }

  .footerActions {
    flex-direction: column;
  }
}

/* ===== ANIMATIONS ===== */

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes processing {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes speaking {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-5px);
  }
  75% {
    transform: translateX(5px);
  }
}

@keyframes voicePulse {
  0% {
    box-shadow: var(--shadow-lg), 0 0 0 0 rgba(59, 130, 246, 0.7);
  }
  70% {
    box-shadow: var(--shadow-lg), 0 0 0 20px rgba(59, 130, 246, 0);
  }
  100% {
    box-shadow: var(--shadow-lg), 0 0 0 0 rgba(59, 130, 246, 0);
  }
}

@keyframes voiceProcessing {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes voiceSpeaking {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

@keyframes iconPulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
}

@keyframes waveAnimation {
  0%, 100% {
    height: 4px;
  }
  50% {
    height: 40px;
  }
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* ===== ACCESSIBILITY ===== */

/* High contrast mode */
@media (prefers-contrast: high) {
  .voiceOrderInterface {
    border: 2px solid var(--swiss-gray-900);
  }

  .voiceButton {
    border: 2px solid var(--swiss-white);
  }

  .transcript {
    border: 2px solid var(--swiss-gray-900);
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Focus indicators */
.voiceOrderInterface *:focus-visible {
  outline: 2px solid var(--voice-primary);
  outline-offset: 2px;
  border-radius: var(--border-radius-sm);
}

/* Screen reader only */
.srOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* ===== PRINT STYLES ===== */
@media print {
  .voiceOrderInterface {
    box-shadow: none;
    border: 1px solid var(--swiss-gray-300);
  }

  .voiceButton,
  .footerActions,
  .settingsPanel {
    display: none;
  }
}

/* ===== PERFORMANCE OPTIMIZATIONS ===== */

/* GPU acceleration for animations */
.voiceButton,
.waveBar,
.toggleHandle {
  will-change: transform;
}

/* Contain layout changes */
.waveformContainer {
  contain: layout;
}

.transcriptSection {
  contain: layout style;
}

/* ===== SWISS DESIGN SYSTEM COMPLIANCE ===== */

/* Swiss Cross pattern (subtle background) */
.voiceOrderInterface::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    linear-gradient(90deg, rgba(220, 20, 60, 0.02) 50%, transparent 50%),
    linear-gradient(0deg, rgba(220, 20, 60, 0.02) 50%, transparent 50%);
  background-size: 20px 20px;
  pointer-events: none;
  z-index: -1;
}

/* Swiss flag colors for special states */
.voiceOrderInterface.swissMode {
  border-color: var(--swiss-red);
}

.voiceOrderInterface.swissMode .voiceButton {
  background: linear-gradient(135deg, var(--swiss-red) 0%, #b91c3c 100%);
}

.voiceOrderInterface.swissMode .statusBadge.listening {
  background: rgba(220, 20, 60, 0.1);
  color: var(--swiss-red);
}