version: '3.9'

services:
  # === WEB APP (Customer PWA) ===
  web:
    image: eatech/web:${VERSION:-latest}
    container_name: eatech-web
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
    networks:
      - eatech-network
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '1'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # === ADMIN DASHBOARD ===
  admin:
    image: eatech/admin:${VERSION:-latest}
    container_name: eatech-admin
    restart: always
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - VITE_APP_URL=${ADMIN_APP_URL}
      - VITE_API_URL=${API_URL}
    networks:
      - eatech-network
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # === MASTER CONTROL ===
  master:
    image: eatech/master:${VERSION:-latest}
    container_name: eatech-master
    restart: always
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - VITE_APP_URL=${MASTER_APP_URL}
      - VITE_API_URL=${API_URL}
    networks:
      - eatech-network
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # === REDIS CLUSTER ===
  redis-master:
    image: redis:7-alpine
    container_name: eatech-redis-master
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_master_data:/data
    networks:
      - eatech-network
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --appendonly yes
      --appendfsync everysec

  redis-replica:
    image: redis:7-alpine
    container_name: eatech-redis-replica
    restart: always
    ports:
      - "6380:6379"
    networks:
      - eatech-network
    command: >
      redis-server
      --replicaof redis-master 6379
      --masterauth ${REDIS_PASSWORD}
      --requirepass ${REDIS_PASSWORD}

  # === NGINX LOAD BALANCER ===
  nginx:
    image: nginx:alpine
    container_name: eatech-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    networks:
      - eatech-network
    depends_on:
      - web
      - admin
      - master
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 128M

  # === MONITORING ===
  prometheus:
    image: prom/prometheus:latest
    container_name: eatech-prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus.prod.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - eatech-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    container_name: eatech-grafana
    restart: always
    ports:
      - "3004:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./infrastructure/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=${GRAFANA_URL}
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=${SMTP_HOST}
      - GF_SMTP_USER=${SMTP_USER}
      - GF_SMTP_PASSWORD=${SMTP_PASSWORD}
    networks:
      - eatech-network

  # === LOG AGGREGATION ===
  loki:
    image: grafana/loki:latest
    container_name: eatech-loki
    restart: always
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    networks:
      - eatech-network

  promtail:
    image: grafana/promtail:latest
    container_name: eatech-promtail
    restart: always
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./infrastructure/monitoring/promtail.yml:/etc/promtail/promtail.yml:ro
    networks:
      - eatech-network

  # === BACKUP SERVICE ===
  backup:
    image: eatech/backup:latest
    container_name: eatech-backup
    restart: always
    environment:
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 3 * * *}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - BACKUP_BUCKET=${BACKUP_BUCKET}
    volumes:
      - backup_data:/backup
    networks:
      - eatech-network

# === VOLUMES ===
volumes:
  redis_master_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  nginx_cache:
    driver: local
  backup_data:
    driver: local

# === NETWORKS ===
networks:
  eatech-network:
    driver: overlay
    attachable: true
    ipam:
      config:
        - subnet: 10.0.0.0/24
