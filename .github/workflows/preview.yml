# Deploy Preview for Pull Requests
name: Deploy Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '18.x'
  PNPM_VERSION: '8'

jobs:
  deploy-preview:
    name: Deploy PR Preview
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      deployments: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build applications
        run: |
          pnpm run build --filter=@eatech/web
          pnpm run build --filter=@eatech/admin
        env:
          NODE_ENV: production
          VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}

      - name: Deploy Web Preview to Vercel
        id: vercel-web
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_WEB_PROJECT_ID }}
          working-directory: ./apps/web
          alias-domains: pr-{{PR_NUMBER}}-web.eatech.vercel.app

      - name: Deploy Admin Preview to Netlify
        id: netlify-admin
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './apps/admin/dist'
          production-deploy: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "PR Preview #${{ github.event.pull_request.number }}"
          enable-pull-request-comment: false
          enable-commit-comment: false
          alias: pr-${{ github.event.pull_request.number }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_ADMIN_SITE_ID }}

      - name: Comment PR with preview URLs
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## ðŸš€ Preview Deployments
            
            | App | Preview URL | Status |
            |-----|-------------|--------|
            | Web App | ${{ steps.vercel-web.outputs.preview-url }} | âœ… Ready |
            | Admin Dashboard | ${{ steps.netlify-admin.outputs.deploy-url }} | âœ… Ready |
            
            ---
            *Last updated: ${new Date().toISOString()}*
            `;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview Deployments')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

      - name: Run Lighthouse on preview
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ steps.vercel-web.outputs.preview-url }}
            ${{ steps.netlify-admin.outputs.deploy-url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
