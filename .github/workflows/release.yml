name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm turbo build

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          pnpm changeset publish

      - name: Update Changelog
        uses: stefanzweifel/changelog-updater-action@v1
        with:
          latest-version: ${{ steps.release.outputs.version }}
          release-notes: ${{ steps.release.outputs.notes }}

      - name: Commit updated files
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          branch: main
          commit_message: 'chore: release ${{ steps.release.outputs.version }} [skip ci]'
          file_pattern: CHANGELOG.md package.json pnpm-lock.yaml

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.release.outputs.version }}
          name: Release v${{ steps.release.outputs.version }}
          body: ${{ steps.release.outputs.notes }}
          draft: false
          prerelease: false

      - name: Deploy Storybook
        run: pnpm --filter @eatech/ui build-storybook
        
      - name: Publish Storybook
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          buildScriptName: build-storybook
          workingDir: packages/ui

      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'Released version ${{ steps.release.outputs.version }}'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: always()