# EATECH V3.0 - Kubernetes ConfigMaps
# Non-sensitive configuration data for all services
# Swiss data compliance and production-ready settings

# Main Application Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: eatech-config
  namespace: eatech-production
  labels:
    app: eatech
    component: configuration
    environment: production
  annotations:
    description: "Main EATECH application configuration"
    version: "3.0.0"
data:
  # Application URLs
  app-url: "https://app.eatech.ch"
  admin-url: "https://admin.eatech.ch"
  master-url: "https://master.eatech.ch"
  api-url: "https://api.eatech.ch"
  websocket-url: "wss://ws.eatech.ch"
  cdn-url: "https://cdn.eatech.ch"

  # Firebase Configuration
  firebase-project-id: "eatech-prod"
  firebase-region: "europe-west1"
  firebase-storage-bucket: "eatech-prod.appspot.com"
  firebase-auth-domain: "eatech-prod.firebaseapp.com"
  firebase-database-url: "https://eatech-prod-default-rtdb.europe-west1.firebasedatabase.app"

  # Environment Settings
  node-env: "production"
  log-level: "info"
  timezone: "Europe/Zurich"
  locale: "de-CH"
  currency: "CHF"

  # Feature Flags
  enable-ai-features: "true"
  enable-voice-commerce: "true"
  enable-emergency-mode: "true"
  enable-blockchain: "false"
  enable-analytics: "true"
  enable-monitoring: "true"

  # Swiss Compliance
  data-residency: "switzerland"
  gdpr-compliance: "true"
  dsg-compliance: "true"

  # Performance Settings
  cache-ttl: "3600"
  max-request-size: "50mb"
  session-timeout: "1800"

  # Rate Limiting
  rate-limit-requests-per-minute: "300"
  rate-limit-requests-per-second: "5"
  rate-limit-burst-size: "10"

---
# Next.js Web Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: nextjs-config
  namespace: eatech-production
  labels:
    app: eatech-web
    component: configuration
  annotations:
    description: "Next.js specific configuration"
data:
  # Next.js Settings
  next-telemetry-disabled: "1"
  next-sharp: "1"
  next-experimental-esmexternals: "true"

  # PWA Configuration
  pwa-enabled: "true"
  pwa-cache-strategy: "NetworkFirst"
  pwa-offline-fallback: "/offline.html"

  # Build Configuration
  build-target: "server"
  build-experimental-app-dir: "true"
  build-output-standalone: "true"

  # Security
  content-security-policy: |
    default-src 'self';
    script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com https://checkout.stripe.com;
    style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
    font-src 'self' https://fonts.gstatic.com;
    img-src 'self' data: https: blob:;
    connect-src 'self' https://api.eatech.ch wss://ws.eatech.ch https://api.stripe.com;
    frame-src 'self' https://js.stripe.com https://hooks.stripe.com;
    object-src 'none';
    base-uri 'self';
    form-action 'self';

---
# Firebase Functions Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: functions-config
  namespace: eatech-production
  labels:
    app: eatech-functions
    component: configuration
  annotations:
    description: "Firebase Functions configuration"
data:
  # Functions Framework
  functions-framework-version: "3.0.0"
  functions-source: "."

  # Node.js Configuration
  node-options: "--max-old-space-size=1024 --enable-source-maps"
  uv-threadpool-size: "20"

  # Timeouts
  function-timeout: "540"
  memory-limit: "2048"

  # Concurrency
  max-instances: "100"
  min-instances: "3"

  # Regions
  available-regions: "europe-west1,europe-west3,europe-west6"

  # CORS Settings
  cors-origin: "https://app.eatech.ch,https://admin.eatech.ch"
  cors-methods: "GET,POST,PUT,DELETE,OPTIONS"
  cors-headers: "Authorization,Content-Type,Accept,Origin"

---
# NGINX Configuration for Admin Dashboard
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-admin-config
  namespace: eatech-production
  labels:
    app: eatech-admin
    component: nginx-config
  annotations:
    description: "NGINX configuration for admin dashboard"
data:
  default.conf: |
    server {
        listen 80;
        server_name admin.eatech.ch;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;

        # Static assets caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }

        # API proxy
        location /api/ {
            proxy_pass https://api.eatech.ch/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # WebSocket proxy
        location /ws/ {
            proxy_pass https://ws.eatech.ch/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_send_timeout 3600s;
            proxy_read_timeout 3600s;
        }

        # SPA fallback
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

---
# NGINX Configuration for Master Control
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-master-config
  namespace: eatech-production
  labels:
    app: eatech-master
    component: nginx-config
    security-level: maximum
  annotations:
    description: "NGINX configuration for master control with maximum security"
data:
  default.conf: |
    server {
        listen 80;
        listen 8443 ssl http2;
        server_name master.eatech.ch;
        root /usr/share/nginx/html;
        index index.html;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Maximum Security Headers
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Referrer-Policy "no-referrer" always;
        add_header X-Permitted-Cross-Domain-Policies "none" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self'; connect-src 'self' https://api.eatech.ch; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

        # Request limits
        client_max_body_size 1m;
        client_body_buffer_size 128k;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 4k;

        # Timeouts
        client_body_timeout 30s;
        client_header_timeout 30s;
        keepalive_timeout 30s;
        send_timeout 30s;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=master:10m rate=1r/s;
        limit_req zone=master burst=5 nodelay;

        # Disable server tokens
        server_tokens off;

        # Gzip with security considerations
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_comp_level 6;
        gzip_types text/plain text/css application/json application/javascript text/javascript;

        # Static assets with security
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
            add_header X-Content-Type-Options "nosniff";
        }

        # API proxy with authentication
        location /api/ {
            proxy_pass https://api.eatech.ch/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Block common attack patterns
        location ~* \.(php|asp|aspx|jsp)$ {
            return 444;
        }

        location ~* /(\.|wp-|admin|config|\.env) {
            return 444;
        }

        # SPA fallback with security
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Secure health check
        location /health/secure {
            access_log off;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            return 200 "secure-healthy\n";
            add_header Content-Type text/plain;
        }
    }

---
# Redis Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: eatech-production
  labels:
    app: eatech-redis
    component: configuration
  annotations:
    description: "Redis configuration for caching and sessions"
data:
  redis.conf: |
    # Network
    bind 0.0.0.0
    port 6379
    timeout 300
    tcp-keepalive 60

    # General
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    logfile ""

    # Snapshotting
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data

    # Replication
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync no
    repl-diskless-sync-delay 5
    repl-disable-tcp-nodelay no
    replica-priority 100

    # Security
    requirepass "redis-secure-password-123"
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    rename-command DEBUG ""
    rename-command CONFIG "CONFIG_b835fc-etc"

    # Memory management
    maxmemory 1gb
    maxmemory-policy allkeys-lru
    maxmemory-samples 5

    # Lazy freeing
    lazyfree-lazy-eviction yes
    lazyfree-lazy-expire yes
    lazyfree-lazy-server-del yes
    replica-lazy-flush yes

    # Threaded I/O
    io-threads 4
    io-threads-do-reads yes

    # Modules
    # loadmodule /usr/lib/redis/modules/rejson.so

---
# Monitoring Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: eatech-production
  labels:
    app: eatech-prometheus
    component: configuration
  annotations:
    description: "Prometheus monitoring configuration"
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
      evaluation_interval: 30s
      external_labels:
        cluster: 'eatech-production'
        region: 'europe-west6'

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      # Kubernetes API Server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes Nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      # EATECH Applications
      - job_name: 'eatech-web'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - eatech-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: eatech-web-service

      - job_name: 'eatech-admin'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - eatech-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: eatech-admin-service

      - job_name: 'eatech-master'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - eatech-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: eatech-master-service

      - job_name: 'eatech-functions'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - eatech-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: eatech-functions-service

      # Redis
      - job_name: 'redis'
        static_configs:
          - targets: ['eatech-redis-service:9121']

      # PostgreSQL
      - job_name: 'postgres'
        static_configs:
          - targets: ['eatech-postgres-service:9187']

---
# Grafana Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: eatech-production
  labels:
    app: eatech-grafana
    component: configuration
  annotations:
    description: "Grafana visualization configuration"
data:
  grafana.ini: |
    [server]
    domain = grafana.eatech.ch
    root_url = https://grafana.eatech.ch
    serve_from_sub_path = false

    [security]
    admin_user = admin
    cookie_secure = true
    cookie_samesite = strict
    strict_transport_security = true

    [users]
    allow_sign_up = false
    allow_org_create = false
    auto_assign_org = true
    auto_assign_org_role = Viewer

    [auth]
    disable_login_form = false
    disable_signout_menu = false

    [auth.anonymous]
    enabled = false

    [log]
    mode = console
    level = info

    [metrics]
    enabled = true

    [feature_toggles]
    enable = ngalert

---
# Application Secrets Template (passwords will be in secrets.yaml)
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-secrets-template
  namespace: eatech-production
  labels:
    app: eatech
    component: secrets-template
  annotations:
    description: "Template for application secrets (actual values in secrets)"
data:
  # List of required secrets
  required-secrets: |
    - firebase-config
    - firebase-service-account-key
    - stripe-secret-key
    - stripe-webhook-secret
    - twilio-account-sid
    - twilio-auth-token
    - sendgrid-api-key
    - openai-api-key
    - redis-password
    - postgres-password
    - jwt-secret
    - encryption-key
    - sentry-dsn
    - grafana-admin-password

  # Security policies
  secrets-rotation-policy: "90-days"
  encryption-at-rest: "enabled"
  audit-logging: "enabled"
