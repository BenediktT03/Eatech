rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isTenantMember(tenantId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/tenants/$(tenantId)/members/$(request.auth.uid));
    }
    
    function isTenantAdmin(tenantId) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/tenants/$(tenantId)/members/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isTenantStaff(tenantId) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/tenants/$(tenantId)/members/$(request.auth.uid)).data.role in ['admin', 'staff'];
    }
    
    function isValidOrder() {
      return request.resource.data.keys().hasAll(['tenantId', 'items', 'total', 'status']) &&
        request.resource.data.items.size() > 0 &&
        request.resource.data.total > 0;
    }
    
    // Tenants collection
    match /tenants/{tenantId} {
      allow read: if isTenantMember(tenantId);
      allow update: if isTenantAdmin(tenantId);
      allow create: if isAuthenticated() && request.auth.token.admin == true;
      allow delete: if false; // Never allow deletion
      
      // Tenant members subcollection
      match /members/{userId} {
        allow read: if isTenantMember(tenantId);
        allow write: if isTenantAdmin(tenantId);
      }
      
      // Tenant settings subcollection
      match /settings/{document=**} {
        allow read: if isTenantMember(tenantId);
        allow write: if isTenantAdmin(tenantId);
      }
    }
    
    // Products collection
    match /products/{productId} {
      allow read: if true; // Public read
      allow create, update: if isTenantStaff(resource.data.tenantId);
      allow delete: if isTenantAdmin(resource.data.tenantId);
    }
    
    // Categories collection
    match /categories/{categoryId} {
      allow read: if true; // Public read
      allow write: if isTenantStaff(resource.data.tenantId);
    }
    
    // Orders collection
    match /orders/{orderId} {
      // Customers can read their own orders
      allow read: if isOwner(resource.data.userId) || 
                     isTenantStaff(resource.data.tenantId);
      
      // Customers can create orders
      allow create: if isAuthenticated() && 
                       isValidOrder() &&
                       request.resource.data.userId == request.auth.uid;
      
      // Staff can update order status
      allow update: if isTenantStaff(resource.data.tenantId) ||
                       (isOwner(resource.data.userId) && 
                        resource.data.status == 'pending' &&
                        request.resource.data.status == 'cancelled');
      
      allow delete: if false; // Never delete orders
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId) || 
                     (isTenantStaff(resource.data.tenantId) && 
                      resource.data.tenantId == request.auth.token.tenantId);
      allow create: if isAuthenticated() && userId == request.auth.uid;
      allow update: if isOwner(userId) || 
                       isTenantAdmin(resource.data.tenantId);
      allow delete: if false; // Soft delete only
    }
    
    // Carts collection
    match /carts/{cartId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isAuthenticated() && 
                       request.resource.data.userId == request.auth.uid;
    }
    
    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if true; // Public read
      allow create: if isAuthenticated() && 
                       request.resource.data.userId == request.auth.uid &&
                       exists(/databases/$(database)/documents/orders/$(request.resource.data.orderId));
      allow update: if isOwner(resource.data.userId);
      allow delete: if isOwner(resource.data.userId) || 
                       isTenantAdmin(resource.data.tenantId);
    }
    
    // Analytics collection (write-only from functions)
    match /analytics/{document=**} {
      allow read: if isTenantStaff(resource.data.tenantId);
      allow write: if false; // Only cloud functions can write
    }
    
    // Inventory collection
    match /inventory/{inventoryId} {
      allow read: if isTenantMember(resource.data.tenantId);
      allow write: if isTenantStaff(resource.data.tenantId);
    }
    
    // Promotions collection
    match /promotions/{promotionId} {
      allow read: if resource.data.active == true || 
                     isTenantStaff(resource.data.tenantId);
      allow write: if isTenantAdmin(resource.data.tenantId);
    }
    
    // System configuration (read-only for all authenticated users)
    match /config/{document=**} {
      allow read: if isAuthenticated();
      allow write: if request.auth.token.admin == true;
    }
    
    // Audit logs (write-only from functions)
    match /audit/{document=**} {
      allow read: if isTenantAdmin(resource.data.tenantId) ||
                     request.auth.token.admin == true;
      allow write: if false; // Only cloud functions can write
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
